/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package libratech.dashboard;

import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;
import java.io.File;
import java.io.IOException;
import libratech.design.GlassPanePopup;
import javax.swing.text.html.HTMLEditorKit;
import java.net.URL;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.rendering.PDFRenderer;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import libratech.design.ImageScaler;
import libratech.design.ScrollBarCustom;
import libratech.util.storage;
import org.apache.pdfbox.rendering.ImageType;

/**
 *
 * @author Carocoy
 */
public class view_pdf extends javax.swing.JPanel {

    private String url;
    private String filename;
    private DatabaseReference books2;
    private DatabaseReference.CompletionListener completionListener;
    ImageScaler scaler = new ImageScaler();
    private JComboBox<Integer> pageComboBox;

    private PDDocument document;
    private PDFRenderer renderer;
    private List<BufferedImage> images;

    public view_pdf(String url, String filename, String key) {
        initComponents();
        setOpaque(false);
        this.url = url;
        this.filename = filename;
        initFont();
        books2 = FirebaseDatabase.getInstance().getReference("files/" + key);

        ScrollBarCustom sb = new ScrollBarCustom();
        sb.setPreferredSize(new Dimension(12, 70));
        jScrollPane2.setVerticalScrollBar(sb);
        ScrollBarCustom sbH = new ScrollBarCustom();
        sbH.setOrientation(JScrollBar.HORIZONTAL);
        sbH.setPreferredSize(new Dimension(12, 12));
        jScrollPane2.setHorizontalScrollBar(sbH);
        jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scaler.scaleImage(jLabel2, "src\\main\\resources\\arrow-left-line.png");

        pageComboBox = new JComboBox<>();
        pageComboBox.addActionListener(e -> displayPage((int) pageComboBox.getSelectedItem()));
        jPanel2.add(pageComboBox);

        completionListener = (DatabaseError error, DatabaseReference ref) -> {
            if (error != null) {
                System.out.println("Error removing value: " + error.getMessage());
            } else {
                System.out.println("Value removed successfully.");
            }
        };
        try {
            loadPDFFromURL(url);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void paintComponent(Graphics graphics) {
        Graphics2D g2 = (Graphics2D) graphics.create();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(getBackground());
        g2.fill(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 15, 15));
        g2.dispose();
        super.paintComponent(graphics);
    }

    public void loadPDFFromURL(String url) throws IOException {
        URL pdfUrl = new URL(url);
        document = PDDocument.load(pdfUrl.openStream());
        renderer = new PDFRenderer(document);

        int pageCount = document.getNumberOfPages();
        images = new ArrayList<>(pageCount);
        for (int i = 0; i < pageCount; i++) {
            BufferedImage image = renderer.renderImageWithDPI(i, 150, ImageType.RGB);
            images.add(image);
            pageComboBox.addItem(i + 1);
        }

        document.close();

        // Display the first page of the PDF
        displayPage(1);
    }

    private void displayPage(int pageNumber) {
        BufferedImage image = images.get(pageNumber - 1);
        jLabel1.setIcon(new ImageIcon(image));
        jLabel1.setPreferredSize(new Dimension(image.getWidth(), image.getHeight()));
        jScrollPane2.setViewportView(jLabel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        myButtonborderless1 = new libratech.design.MyButtonborderless();
        myButtonborderless2 = new libratech.design.MyButtonborderless();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("jLabel1");
        add(jLabel1, java.awt.BorderLayout.CENTER);

        myButtonborderless1.setForeground(new java.awt.Color(250, 250, 250));
        myButtonborderless1.setText("Download PDF");
        myButtonborderless1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myButtonborderless1MouseClicked(evt);
            }
        });
        myButtonborderless1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButtonborderless1ActionPerformed(evt);
            }
        });

        myButtonborderless2.setForeground(new java.awt.Color(250, 250, 250));
        myButtonborderless2.setText("Delete PDF");
        myButtonborderless2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myButtonborderless2MouseClicked(evt);
            }
        });
        myButtonborderless2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButtonborderless2ActionPerformed(evt);
            }
        });

        jLabel2.setPreferredSize(new java.awt.Dimension(25, 25));
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 356, Short.MAX_VALUE)
                .addComponent(myButtonborderless1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myButtonborderless2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myButtonborderless1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myButtonborderless2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 691, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel1);

        add(jScrollPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void myButtonborderless1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myButtonborderless1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_myButtonborderless1MouseClicked

    private void myButtonborderless1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButtonborderless1ActionPerformed

        try {
            new storage().download(filename);
        } catch (IOException ex) {
            Logger.getLogger(view_pdf.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_myButtonborderless1ActionPerformed

    private void myButtonborderless2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myButtonborderless2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_myButtonborderless2MouseClicked

    private void myButtonborderless2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButtonborderless2ActionPerformed
        // TODO add your handling code here:
        books2.getRef().removeValue(completionListener);
        home home = new home();
        home.setVisible(true);
        home.jPanel15.setBackground(Color.decode("#0E2C4A"));
        home.jPanel10.setBackground(Color.decode("#041C34"));
        home.jPanel18.setBackground(Color.decode("#041C34"));
        home.jLabel17.setFont(new Font("Poppins Regular", Font.BOLD, 16));
        home.jLabel14.setFont(new Font("Poppins Regular", Font.PLAIN, 16));
        home.jLabel20.setFont(new Font("Poppins Regular", Font.PLAIN, 16));
        CardLayout cardLayout = (CardLayout) home.jPanel3.getLayout();
        cardLayout.show(home.jPanel3, "book");
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(view_pdf.this);
        frame.dispose();
    }//GEN-LAST:event_myButtonborderless2ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        GlassPanePopup.closePopupLast();
    }//GEN-LAST:event_jLabel2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private libratech.design.MyButtonborderless myButtonborderless1;
    private libratech.design.MyButtonborderless myButtonborderless2;
    // End of variables declaration//GEN-END:variables
    public void initFont() {
        myButtonborderless1.setFont(new Font("Poppins Regular", Font.BOLD, 12));
        myButtonborderless2.setFont(new Font("Poppins Regular", Font.BOLD, 12));
//        exit.setFont(new Font("Poppins Regular", Font.BOLD, 12));
//        cancel.setFont(new Font("Poppins Regular", Font.BOLD, 12));
    }
}
